name: Create Release

on:
  push:
    branches:
      - dev  # Modify this if you're using a different branch

jobs:
  increment_version_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Read current version
        id: read_version
        run: |
          echo "::set-output name=version::$(grep -oP 'versionName "\K[^"]+' app/build.gradle)"

      - name: Increment version
        id: increment_version
        run: |
          current_version=$(echo "${{ steps.read_version.outputs.version }}")
          IFS='.' read -r -a version_parts <<< "$current_version"
          major="${version_parts[0]}"
          minor="${version_parts[1]}"
          patch="${version_parts[2]}"
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "::set-output name=new_version::$new_version"

      - name: Update build.gradle with new version
        run: |
          new_version="${{ steps.increment_version.outputs.new_version }}"
          sed -i "s/versionName \".*\"/versionName \"$new_version\"/" app/build.gradle

      - name: Commit changes
        run: |
          git config --local user.email "ansarishehbaz726@gmail.com"
          git config --local user.name "Shebyyy"
          git add app/build.gradle
          git commit -m "Bump version to ${{ steps.increment_version.outputs.new_version }} [skip ci]"
          git push

      - name: Create Tag
        run: |
          git tag -a v${{ steps.increment_version.outputs.new_version }} -m "Version ${{ steps.increment_version.outputs.new_version }}"
          git push origin v${{ steps.increment_version.outputs.new_version }}

  build_and_create_release:
    runs-on: ubuntu-latest
    needs: increment_version_and_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle
          
      - name: List files in the directory
        run: ls -l
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew
  
      - name: Build with Gradle (Google)
        run: ./gradlew assembleGoogleRelease

      - name: Move APK and calculate checksum
        run: |
          mv app/build/outputs/apk/google/release/app-google-release.apk release-google-${{ env.VERSION }}.apk
          echo "GOOGLE=$(sha256sum release-google-${{ env.VERSION }}.apk | cut -d' ' -f1)" >> $GITHUB_ENV

      - name: Upload Build Artifacts (Google)
        uses: actions/upload-artifact@v4
        with:
          name: Dantotsu-Google
          path: "release-google-${{ env.VERSION }}.apk"
          
      - name: Create Release
        if: github.repository == 'Shebyyy/Santotsu'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.increment_version.outputs.new_version }}
          name: Dantotsu ${{ steps.increment_version.outputs.new_version }}
          body: |
            ---

            ### Checksums

            | Variant | SHA-256 |
            | ------- | ------- |
            | Google Build | ${{ env.GOOGLE }}
          files: |
            release-google-${{ env.VERSION }}.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
