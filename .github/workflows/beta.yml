name: Build APK and Notify Telegram

on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download last SHA artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: beta.yml
          name: last-sha
          path: .
        continue-on-error: true

      - name: Get Commits Since Last Run
        run: |
          if [ -f last_sha.txt ]; then
            LAST_SHA=$(cat last_sha.txt)
          else
            # Fallback to first commit if no previous SHA available
            LAST_SHA=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Commits since $LAST_SHA:"
          COMMIT_LOGS=$(git log $LAST_SHA..HEAD --pretty=format:"● %s ~%an")
          COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\n'/'%0A'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\r'/'%0D'}"
          echo "COMMIT_LOG=${COMMIT_LOGS}" >> $GITHUB_ENV
        env:
          CI: true
        continue-on-error: true

      - name: Save Current SHA for Next Run
        run: echo ${{ github.sha }} > last_sha.txt

      - name: Set variables
        run: |
          VER=$(grep -E -o "versionName \".*\"" app/build.gradle | sed -e 's/versionName //g' | tr -d '"')
          SHA=${{ github.sha }}
          VERSION="$VER+${SHA:0:7}"
          echo "Version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle 

      - name: List files in the directory
        run: ls -l

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew assembleGoogleAlpha 

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Dantotsu
          retention-days: 5 
          compression-level: 9 
          path: "app/build/outputs/apk/google/alpha/app-google-alpha.apk"

      - name: Upload APK to Telegram
        if: ${{ github.repository == 'Shebyyy/Santotsu' }}
        run: |
          commit_messages=$(echo "$COMMIT_LOG" | sed 's/%0A/\n/g; s/^/\n/')
          max_length=1900
          if [ ${#commit_messages} -gt $max_length ]; then
            commit_messages="${commit_messages:0:$max_length}... (truncated)"
          fi
          caption="<b>Dantotsu Build (${VERSION})</b>
          $commit_messages"
          curl -F "chat_id=-1001990691533" \
               -F "document=@app/build/outputs/apk/google/alpha/app-google-alpha.apk" \
               -F "caption=$caption" \
               -F "parse_mode=HTML" \
               https://api.telegram.org/bot6466986906:AAFNxh2KOe-E1z4Khwlc0AMngWz0UwVmOT8/sendDocument
        env:
          COMMIT_LOG: ${{ env.COMMIT_LOG }}
          VERSION: ${{ env.VERSION }}

      - name: Upload Artifacts (if failure)
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: last-sha
          path: last_sha.txt
          
      - name: Upload Commit log as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: commit-log
          path: commit_log.txt 
